{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactList.module.css","components/SectionTitle/SectionTitle.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactList.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","SectionTitle","children","title","defaultProps","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","formLabel","type","formInput","onChange","add","Component","Filter","filter","inputFilter","ContactList","filterName","deleteId","map","item","deleteitem","onClick","id","App","contacts","formSubmitHandler","data","uuidv4","contact","includes","length","alert","prevState","changeFilter","delete","itemId","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLocaleLowerCase","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a6c777a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__dBmR8\",\"inputFilter\":\"Filter_inputFilter__2V4dZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteitem\":\"ContactList_deleteitem__G4z8E\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SectionTitle = ({ children, title }) => (\r\n  <>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </>\r\n);\r\nSectionTitle.defaultProps = {\r\n  title: '',\r\n};\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nexport default SectionTitle;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.formLabel}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.formInput}\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className={s.formLabel}>\r\n          Number\r\n          <input\r\n            type=\"number\"\r\n            name=\"number\"\r\n            className={s.formInput}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className={s.add} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.filter}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      className={s.inputFilter}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ filterName, deleteId }) => (\r\n  <ul>\r\n    {filterName.map(item => (\r\n      <li key={item.id}>\r\n        <span>\r\n          {item.name} : {item.number}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={s.deleteitem}\r\n          onClick={() => {\r\n            deleteId(item.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  filterName: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteId: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport SectionTitle from './SectionTitle/SectionTitle';\nimport ContactForm from './ContactForm/ContactForm';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactsList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    data = { ...data, id: uuidv4() };\n\n    const sameName = contacts.filter(contact =>\n      contact.name.includes(data.name),\n    );\n    if (sameName.length) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, data],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  delete = itemId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== itemId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filterName = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div>\n        <SectionTitle title=\"Phonebook\">\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </SectionTitle>\n\n        <SectionTitle title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList filterName={filterName} deleteId={this.delete} />\n        </SectionTitle>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1r_Uu\",\"add\":\"ContactForm_add__CB2rc\",\"formLabel\":\"ContactForm_formLabel__GGELO\",\"formInput\":\"ContactForm_formInput__206HF\"};"],"sourceRoot":""}